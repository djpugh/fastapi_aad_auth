[tox]
envlist = {test}
requires=
    pip>21.1

[testenv]
deps =
    -rrequirements.txt
    develop,testapp: uvicorn
    lint,develop: flake8
    lint,develop: pipenv
    lint,develop: flake8-import-order
    lint,develop: flake8-eradicate
    lint,develop: flake8-docstrings
    test,develop: pytest
    test,develop: pytest-cov
    test,develop: tox
    cq,develop: pylint
    types,develop: mypy
    types,develop: types-requests
    types,develop: types-pkg_resources
    types,develop: lxml
    types,develop: types-cachetools
    security,develop: bandit
    docs,develop: sphinx
    docs,develop: sphinx_material
    docs,develop: sphinx_github_changelog
    build,develop: wheel

commands =
    lint: flake8 src/
    lint: pipenv check
    test: pytest  {posargs: -rs tests/unit --log-level=WARNING --cov=fastapi_aad_auth --cov-report xml:{toxinidir}/reports/{envname}-coverage.xml}
    docs: python -m sphinx -E -b html -a {toxinidir}/docs/source {toxinidir}/docs/html
    build: python setup.py sdist --format=zip
    build: python setup.py sdist --format=gztar
    build: python setup.py bdist_wheel
    security: python -c "import os; a = 1 if os.path.exists('reports') else os.makedirs('reports')"
    security: bandit -r src/ --format xml --output reports/security-results.xml -x *_version.py
    security: bandit -r src/  -x *_version.py
    types: python -c "import os; a = 1 if os.path.exists('reports') else os.makedirs('reports')"
    types: mypy -p fastapi_aad_auth --linecoverage-report reports --junit-xml reports/mypy.xml --cobertura-xml-report test-reports

passenv =
    docs: SPHINX_GITHUB_CHANGELOG_TOKEN

[testenv:setup_version]
deps = versioneer
commands = versioneer install
skip_install=True

[testenv:develop]
skip_install = True
envdir = {toxinidir}/.venv
commands = python setup.py develop

[testenv:testapp]
skip_install = True
envdir = {toxinidir}/.venv
commands =
    python setup.py develop
    python tests/testapp/server.py
